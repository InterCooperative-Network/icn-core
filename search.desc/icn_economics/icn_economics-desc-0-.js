searchState.loadedDescShard("icn_economics", 0, "ICN Economics Crate\nMaximum mana spend allowed per single operation.\nAbstraction over the persistence layer storing account …\nThin wrapper exposing convenience methods over a <code>ManaLedger</code>…\nEnforces spending limits and forwards to a …\nReturns a list of all known account DIDs.\nExposes a public function to charge mana, wrapping …\nCredit mana to the account.\nCredit every known account with additional mana.\nCredits mana to all known accounts using their reputation …\nCredits mana to the given DID using the provided ledger.\nCredits the specified account with additional mana.\nReturns the argument unchanged.\nReturns the argument unchanged.\nRetrieve the mana balance for a DID.\nRetrieve the account balance.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConstruct a new adapter around the provided ledger …\nCreate a new enforcer using the supplied adapter.\nCalculates the final mana price for a resource based on …\nPlaceholder function demonstrating use of common types for …\nPersist a new balance for a DID.\nSpend mana from the account.\nDeduct mana from an account via the underlying ledger.\nSpend mana after applying basic policy checks.\nReturn a list of all account DIDs stored in this ledger.\nRetrieve a list of all account DIDs stored in the ledger.\nCredit <code>amount</code> of mana to the account.\nAdd <code>amount</code> of mana to every stored account.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturn the current mana balance for <code>account</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate or load a ledger persisted on disk at <code>path</code>.\nOpen or create a sled database at <code>path</code> for mana accounting.\nPersist a new balance for <code>account</code>.\nDeduct <code>amount</code> of mana from the account, erroring if the …")