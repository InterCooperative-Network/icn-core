searchState.loadedDescShard("icn_zk", 0, "Reusable zero-knowledge circuits for ICN credential proofs.\nProve that <code>current_year &gt;= birth_year + 18</code>.\nSerialized circuit parameters produced by a trusted setup.\nStorage trait for circuit parameters keyed by circuit name.\nProve knowledge of membership boolean (must equal <code>true</code>).\nIn-memory implementation of <code>CircuitParametersStorage</code>.\nProve that <code>reputation &gt;= threshold</code>.\nBirth year of the subject (private).\nCurrent year (public).\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate parameters from an existing proving key.\nFetch parameters for the given circuit name if present.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether the prover is a member (public).\nPrepare the verifying key for use in verification.\nDerive a prepared verifying key from the stored proving …\nCreate a Groth16 proof for the provided circuit and …\nConvert the parameters into a <code>ProvingKey</code>.\nCompressed Groth16 proving key bytes.\nStore parameters for the given circuit name.\nReputation score (public).\nGenerate Groth16 parameters for a given circuit.\nRequired threshold.\nVerify a Groth16 proof with the given verifying key and …")