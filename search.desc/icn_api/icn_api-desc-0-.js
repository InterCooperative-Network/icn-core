searchState.loadedDescShard("icn_api", 0, "ICN API Crate\nRequest to burn tokens from an account.\nRequest body for creating a new token class.\nConcrete implementation for DAG API operations.\nConcrete implementation for the Governance API\nRequest to mint new tokens.\nBalance information for a single token class.\nRepresentation of a token class.\nAPI surface for token management and balance queries.\nRequest to transfer tokens between accounts.\nBurn tokens from the given DID account.\nCreate a new token class.\nAPI endpoint to discover network peers. The caller …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nFetch details about a specific token class by ID.\nRetrieve <code>DagBlock</code> metadata by CID.\nRetrieves basic information about the ICN node. This …\nRetrieves the current operational status of the ICN node. …\nRetrieve the local peer ID from an ICN node via HTTP.\nRetrieve the list of peers from an ICN node via HTTP.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nList token balances for the specified DID.\nPrometheus metrics helpers\nMint tokens to the given DID account.\nCreate a new <code>GovernanceApiImpl</code> wrapping the given …\nQueries data from the provided DAG store by CID.\nRetrieves a DagBlock from the provided DAG store by its …\nAPI endpoint to send a message to a specific peer. The …\nSubmits a DagBlock to the provided DAG store. Returns the …\nPlanned: Define a trait for the ICN API service for RPC …\nTransfer tokens between accounts.\nResponse body for <code>GET /circuits/{{slug}}/{{version}}</code>.\nResponse for listing available versions of a circuit.\nRequest body for <code>POST /circuits/register</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBase64 encoded Groth16 proving key bytes.\nCircuit identifier slug, e.g. <code>age_over_18</code>.\nCircuit slug.\nCircuit slug.\nBase64 encoded verifying key bytes.\nVerifying key bytes.\nSemantic version string like <code>1.0.0</code>.\nCircuit version string.\nKnown versions.\nAPI surface for DAG operations.\nReturn the current root CID of the node’s DAG.\nRetrieve synchronization status for the local DAG.\nAPI surface for federation management.\nRequest payload for federation join/leave operations.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nJoin a federation by connecting to the given peer.\nLeave a federation, removing the given peer from the known …\nPeer identifier string.\nRemove an existing member from the cooperative\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBatch verification results.\nResponse containing the issued credential.\nRequest selective disclosure of certain fields.\nResponse containing disclosed fields and proof of the rest.\nRequest to generate a credential proof on the node.\nRequest to issue a verifiable credential.\nResponse containing the generated proof.\nResult of verifying a credential.\nRequest to verify multiple zero-knowledge proofs.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGenerate a zero-knowledge credential proof.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nVerify a single credential proof using the runtime’s ZK …\nVerify multiple credential proofs in one call.\nVerify a revocation proof to confirm a credential remains …\nVerify a credential proof using the runtime.\nICN-specific application metrics\nReturns Prometheus metrics in text format for the …\nRegisters common ICN metrics (job execution, governance …\nAdditional system-level metrics for ICN nodes\nHelper function to update system metrics (to be called …\nActive consensus rounds\nNumber of active DIDs\nCCL contracts deployed\nCCL contract execution time\nDAG block height (latest block)\nDAG storage size in bytes\nTotal number of federation members\nAverage mana regeneration rate\nTotal mana in circulation\nAuthentication failures counter\nNumber of active HTTP connections\nHTTP errors counter\nHTTP request counter by status code\nHTTP request duration histogram\nNode startup timestamp (Unix seconds)\nRate limit violations counter\nCurrent system CPU usage percentage\nCurrent system memory usage in bytes")