searchState.loadedDescShard("icn_governance", 0, "ICN Governance Crate\nManages governance proposals and voting.\nFull proposal record stored in the governance module.\nUnique identifier for a governance proposal.\nCurrent lifecycle state of a proposal.\nThe type of action a proposal intends to perform.\nA single vote on a proposal.\nPossible voting options.\nAdds a new member eligible to vote.\nRecord a vote for the specified proposal.\nAutomatically close all proposals whose voting deadlines …\nFinalizes voting on a proposal and updates its status …\nExecutes an accepted proposal. New members are added when …\nMark any proposals past their deadline as <code>Rejected</code> without …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nFetch a proposal by ID if it exists.\nInserts a proposal that originated from another node into …\nInserts a vote that originated from another node.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn all currently stored proposals.\nReturns a reference to the current member set.\nCreates a new GovernanceModule with an in-memory backend.\nCreates a new GovernanceModule with a sled persistent …\nTransition a proposal from <code>Pending</code> to <code>VotingOpen</code>.\nOptional quorum override for this proposal\nRemoves an existing member, preventing them from voting.\nRegister a callback executed when proposals are run via […\nSets the minimum number of votes required for a proposal …\nSets the fraction of <code>Yes</code> votes required for acceptance.\nPlaceholder function demonstrating use of common types for …\nCreate and store a new proposal in the governance module.\nCounts yes/no/abstain votes for a proposal, considering …\nOptional threshold override for this proposal\nCounts votes cast.\nCounts executed proposals.\nCounts proposal submissions.\nOperations that may be subject to scoped policy checks …\nIn-memory implementation of <code>ScopedPolicyEnforcer</code> based on …\nTrait for enforcing scoped policies on DAG operations.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new enforcer with the given allowed members for …")