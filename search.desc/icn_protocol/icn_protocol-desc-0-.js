searchState.loadedDescShard("icn_protocol", 0, "ICN Protocol Crate\nAbstain from voting\nExecute a CCL WASM module\nAnnounce availability of a new DAG block\nAnnounce availability of a new DAG block\nRequest a specific DAG block by CID\nRequest a specific DAG block\nResponse with requested DAG block data\nResponse with requested DAG block data\nDAG storage service\nSimple echo job for testing\nEconomic parameters for federation\nAdditional metadata about job execution\nFederation management\nFederation configuration settings\nLegacy federation join request for backward compatibility\nRequest to join a federation\nRequest to join a federation\nLegacy federation join response for backward compatibility\nResponse to federation join request\nResponse to federation join request\nRequest federation state synchronization\nRequest federation state synchronization\nGeneric placeholder for future job types\nGeneric gossip message for flexible communication\nGeneric gossip message for flexible communication\nGovernance participation\nGovernance parameters for federation\nAnnounce a new governance proposal\nAnnounce a new governance proposal\nRequest governance state synchronization\nRequest governance state synchronization\nBroadcast a vote on a proposal\nBroadcast a vote on a proposal\nHeartbeat message for connectivity testing\nHeartbeat/ping message for connectivity testing\nProtocol version for message compatibility\nTypes of jobs that can be executed in the mesh\nJob specification for mesh execution\nSync job announcements\nSync member list\nAdd a new member to governance\nRemove a member from governance\nSubmit a bid to execute a specific job\nSubmit a bid to execute a specific job\nJob execution service\nAnnounce a new job to potential executors\nAnnounce a new job available for execution\nNotify network of job assignment to executor\nNotify network of job assignment to selected executor\nSubmit execution receipt with results\nSubmit execution receipt with job results\nAll possible message payload types in the ICN protocol\nVote against\nNode capabilities for federation membership\nNode status information\nChange a system parameter\nPeer discovery and capability advertisement\nPeer discovery and capability advertisement\nTypes of governance proposals\nSync governance proposals\nMain protocol message envelope that wraps all ICN …\nGeneral relay/routing\nSync reputation data\nResource requirements specification\nTypes of services a node can offer\nUpgrade system software version\nTypes of federation data that can be synchronized\nGeneric text-based proposal\nPossible vote options\nVote in favor\nWhether the request was accepted\nWhether the request was accepted\nNetwork addresses for connection\nDID of the advertising node\nFinal agreed cost in mana\nAvailable resources\nBase mana regeneration rate per hour\nDeadline for bid submissions (Unix timestamp)\nCID of the available block\nCID of the requested block\nCID of the block being sent\nThe actual block data (None if not found)\nCurrent block height in DAG\nSize of the block in bytes\nNode capabilities\nExpected completion deadline\nAvailable compute resources\nProposed cost in mana\nNumber of CPU cores needed\nBlock creation timestamp\nDID of the job creator\nHuman-readable description\nEconomic parameters\nError message if block could not be provided\nEstimated execution time in seconds\nOptional execution logs or stdout\nAdditional execution metadata\nDID of the executor submitting the bid\nDID of the selected executor\nExit code of the executed process\nFederation configuration if accepted\nIdentifier of the federation to join\nFederation identifier\nFederation to sync with\nIdentifier of the federation to join\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGovernance parameters\nInput data CIDs required for execution\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether node is online and available\nUnique job identifier\nID of the job being bid on\nID of the assigned job\nBrief job specification for filtering\nOptional justification for the vote\nThe type of job to execute\nNumber of links from this block\nCID of the job manifest with full details\nOptional manifest CID for executor reference\nMaximum mana willing to pay\nMaximum execution time in seconds\nMaximum mana capacity\nMaximum number of proposals to sync\nList of federation members\nMemory required in megabytes\nGet a string identifier for the message type\nMinimum quorum for proposals\nNetwork bandwidth capabilities\nCreate a new protocol message with current timestamp\nDID of the requesting node\nDID of the node requesting membership\nNode’s capabilities and resources\nNode status information\nResources being offered\nExpected output names\nThe actual message payload\nMessage payload\nPeak memory usage during execution\nNumber of connected peers\nPriority of the request (0-255, higher = more urgent)\nSerialized proposal data\nUnique proposal identifier\nID of the proposal being voted on\nType of proposal action\nDID of the proposer\nReason for acceptance/rejection\nThe execution receipt with results\nOptional target recipient DID (None for broadcast)\nOptional referral from existing member\nReputation multiplier for mana regen\nExecutor’s current reputation score\nDID of the requesting node\nDID of the requesting node\nMinimum resource requirements\nDID of the sender\nTimestamp when heartbeat was sent\nSequence number for tracking\nPlaceholder function demonstrating use of common types for …\nServices offered by this node\nCryptographic signature over the message\nSync proposals after this timestamp\nSync events after this timestamp\nStorage capacity in GB\nStorage space needed in megabytes\nSupported job types\nTypes of data to sync\nMessage timestamp (Unix seconds)\nTopic identifier for message routing\nTime-to-live for message propagation\nNode uptime percentage (0-100)\nProtocol version for compatibility checking\nSoftware version running\nThe vote choice\nVote threshold for acceptance (0.0-1.0)\nTimestamp when vote was cast\nDID of the voter\nVoting deadline (Unix timestamp)\nVoting period in seconds\nTotal wall-clock time for execution")