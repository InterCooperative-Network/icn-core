searchState.loadedDescShard("icn_runtime", 0, "ICN Runtime Crate\nHelper used by host functions to update executor …\nAsynchronous version of <code>StorageService</code>.\nDefines the Host ABI function indices for the ICN runtime.\nCast to [<code>Any</code>] for downcasting.\nChecks if a block with the given CID exists in the store.\nDefines the <code>RuntimeContext</code>, <code>HostEnvironment</code>, and related …\nDeletes a block from the store by its CID.\nPlaceholder function demonstrating use of common types for …\nThis module provides executor-side functionality for …\nReturns the argument unchanged.\nRetrieves a block from the store by its CID.\nRetrieve metadata for a block.\nABI Index: (defined in <code>abi::ABI_HOST_ACCOUNT_CREDIT_MANA</code>) …\nABI Index: (defined in <code>abi::ABI_HOST_ACCOUNT_GET_MANA</code>) …\nABI Index: (defined in <code>abi::ABI_HOST_ACCOUNT_SPEND_MANA</code>) …\nABI Index: (defined in <code>abi::ABI_HOST_ANCHOR_RECEIPT</code>) …\nCasts a governance vote using the runtime context.\nCloses voting on a governance proposal and broadcasts the …\nCreates a governance proposal using the runtime context.\nDelegate voting power from one DID to another.\nExecutes an accepted governance proposal, rewarding the …\nABI Index: (defined in <code>abi::ABI_HOST_GET_PENDING_MESH_JOBS</code>)\nABI Index: (defined in <code>abi::ABI_HOST_GET_REPUTATION</code>) …\nRevoke any vote delegation for the given DID.\nABI Index: (defined in <code>abi::ABI_HOST_SUBMIT_MESH_JOB</code>) …\nCalls <code>U::from(self)</code>.\nRetrieve all blocks stored in the backend.\nCreate a new updater with no internal state.\nMark the block as pinned.\nDelete expired blocks that are not pinned.\nPuts a block into the store.\nUpdate TTL metadata for a block.\nRecord a completed execution in the provided reputation …\nRemove the pinned flag.\nWASM wrapper for <code>host_account_get_mana</code>.\nWASM wrapper for <code>host_account_spend_mana</code>.\nWASM wrapper for <code>host_anchor_receipt</code>.\nWASM wrapper for <code>host_get_pending_mesh_jobs</code>.\nWASM wrapper for <code>host_submit_mesh_job</code>.\nABI Index for <code>host_account_credit_mana</code>. Credits mana to …\nABI Index for <code>host_account_get_mana</code>. Retrieves the mana …\nABI Index for <code>host_account_spend_mana</code>. Attempts to spend …\nABI Index for <code>host_anchor_receipt</code>. Anchors an execution …\nABI Index for <code>host_cast_governance_vote</code>. Casts a vote on …\nABI Index for <code>host_close_voting_and_verify</code>. Closes voting …\nABI Index for <code>host_create_governance_proposal</code>. Creates a …\nABI Index for <code>host_execute_governance_proposal</code>. Triggers …\nABI Index for <code>host_get_pending_mesh_jobs</code>. Retrieves …\nABI Index for <code>host_get_reputation</code>. Retrieves the …\nABI Index for <code>host_open_governance_voting</code>. Opens a …\nABI Index for <code>host_submit_mesh_job</code>. Submits a job to the …\nProduction signer using an Ed25519 keypair with memory …\nAbstract interface to load Ed25519 key material from a …\nSupported mana ledger persistence backends.\nTrait for a service that can broadcast and receive …\nMana cost deducted when creating a governance proposal.\nSimple wrapper around the selected <code>ManaLedger</code> …\nMana cost deducted when casting a governance vote.\nAdd a new federation member via governance.\nAllocate mana for a specific budget purpose.\nAnchors an execution receipt to the DAG store and returns …\nDefault timeout in milliseconds when waiting for job …\nReturns a boxed object from a boxed trait object if the …\nReturns an <code>Arc</code>-ed object from an <code>Arc</code>-ed trait object if …\nReturns a mutable reference to the object within the trait …\nReturns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …\nReturns a reference to the object within the trait object …\nFetch the Ed25519 keypair used for signing.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nLoad a signer from an encrypted private key file. The file …\nLoad a signer from a hardware security module via an …\nGet the underlying libp2p service for peer info access\nInserts a proposal received from the network into the …\nInserts a vote received from the network into the local …\nVerify integrity of all DAG blocks once.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if the trait object wraps an object of type …\nCreate a new context using the default mana ledger path (…\nCreate a new ledger at the given path. Panics if the …\nCreate a signer from an Ed25519 <code>SigningKey</code>.\nCreate a ledger using a specific backend.\nCreate from a precomputed keypair.\nCreate a new context using a mana ledger stored at …\nCreate a new context using a mana ledger stored at …\nCreate a new context with a preconstructed mana ledger.\nCreate a new context with a preconstructed mana ledger and …\nCreate a new context using filesystem paths for the DAG …\nCreate a new RuntimeContext with real libp2p networking\nCreate a new RuntimeContext with real libp2p networking …\nRuntime tunable parameters updated via governance.\nShut down the underlying libp2p service if present\nSpawn a background task that periodically checks DAG …\nSpawn a background task that periodically credits all mana …\nSource of time for timestamp generation.\nUpdate a runtime parameter via governance.\nExpose verifying key reference.\nResource limiter for WASM execution\nTrait for a job executor.\nA simple executor that can handle basic predefined tasks …\nA WASM-based executor that loads WASM modules from the DAG …\nWASM module validator for security analysis\nSecurity limits for WASM execution\nExecutes the given job using [<code>execute_job</code>] and immediately …\nExecutes the given job and returns an ExecutionReceipt.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nInstruction fuel allotted to each execution.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMaximum execution time in seconds\nMaximum fuel consumption\nMaximum number of functions\nMaximum number of globals\nMaximum bytes of linear memory a guest may allocate.\nMaximum linear memory pages (64KB each)\nMaximum stack depth\nMaximum table size\nMaximum number of tables\nCreates a new <code>WasmExecutor</code> bound to the given runtime …\nSecurity limits for WASM execution\nValidates a WASM module against configured security limits\nCreate a <code>SimpleExecutor</code> that can also execute CCL WASM …\nReads a slice of bytes from guest memory.\nReads a UTF-8 string from guest memory.\nReads a UTF-8 string from guest memory, returning an empty …\nWrites bytes into guest memory at the given pointer.\nWrites a UTF-8 string into guest memory at the given …\nWrites at most <code>max_len</code> bytes of the provided UTF-8 string …\nCounts calls to <code>host_account_get_mana</code>.\nCounts calls to <code>host_account_spend_mana</code>.\nCounts calls to <code>host_get_pending_mesh_jobs</code>.\nCounts calls to <code>host_submit_mesh_job</code>.\nTracks the number of jobs currently active (submitted but …\nCounts mesh jobs that completed successfully.\nCounts mesh jobs that failed.\nCounts mesh jobs submitted via the runtime.\nCounts receipts anchored to the DAG.")