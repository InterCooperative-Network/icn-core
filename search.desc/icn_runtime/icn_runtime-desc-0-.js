searchState.loadedDescShard("icn_runtime", 0, "ICN Runtime Crate\nReputation updater for handling execution receipts.\nDefines the Host ABI function indices for the ICN runtime.\nConfiguration management for ICN runtime.\nRuntime context module for the ICN runtime.\nMacro to enforce production service usage\nThis module provides executor-side functionality for …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nABI Index: (defined in <code>abi::ABI_HOST_ACCOUNT_CREDIT_MANA</code>) …\nABI Index: (defined in <code>abi::ABI_HOST_ACCOUNT_GET_MANA</code>) …\nABI Index: (defined in <code>abi::ABI_HOST_ACCOUNT_SPEND_MANA</code>) …\nABI Index: (defined in <code>abi::ABI_HOST_ANCHOR_RECEIPT</code>) …\nCasts a governance vote using the runtime context.\nCloses voting on a governance proposal and broadcasts the …\nCreates a governance proposal using the runtime context.\nDelegate voting power from one DID to another.\nExecutes an accepted governance proposal, rewarding the …\nABI Index: (defined in <code>abi::ABI_HOST_GET_PENDING_MESH_JOBS</code>)\nGet the reputation of a DID.\nRevoke any vote delegation for the given DID.\nABI Index: (defined in <code>abi::ABI_HOST_SUBMIT_MESH_JOB</code>) …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new updater with no internal state.\nRecord a completed execution in the provided reputation …\nMacro to validate service configuration at compile time\nWASM wrapper for <code>host_account_get_mana</code>.\nWASM wrapper for <code>host_account_spend_mana</code>.\nWASM wrapper for <code>host_anchor_receipt</code>.\nWASM wrapper for <code>host_get_pending_mesh_jobs</code>.\nWASM wrapper for <code>host_submit_mesh_job</code>.\nABI Index for <code>host_account_credit_mana</code>. Credits mana to …\nABI Index for <code>host_account_get_mana</code>. Retrieves the mana …\nABI Index for <code>host_account_spend_mana</code>. Attempts to spend …\nABI Index for <code>host_anchor_receipt</code>. Anchors an execution …\nABI Index for <code>host_cast_governance_vote</code>. Casts a vote on …\nABI Index for <code>host_close_voting_and_verify</code>. Closes voting …\nABI Index for <code>host_create_governance_proposal</code>. Creates a …\nABI Index for <code>host_execute_governance_proposal</code>. Triggers …\nABI Index for <code>host_get_pending_mesh_jobs</code>. Retrieves …\nABI Index for <code>host_get_reputation</code>. Retrieves the …\nABI Index for <code>host_open_governance_voting</code>. Opens a …\nABI Index for <code>host_submit_mesh_job</code>. Submits a job to the …\nBootstrap peer configuration\nConnection limits configuration\nDAG store configuration\nDID resolver configuration\nEnvironment-specific configuration\nGovernance configuration\nHSM configuration\nIdentity and security configuration\nKey storage configuration\nMana ledger configuration\nNetwork configuration\nNetwork timeout configuration\nProposal configuration\nReputation store configuration\nComplete runtime configuration\nConfiguration builder for advanced use cases\nRuntime parameters configuration\nStorage configuration\nVoting configuration\nAdd a bootstrap peer\nAdd a listen address\nMultiaddress\nApply a configuration template\nBootstrap peers\nBuild the final configuration\nBuild without validation (useful for testing)\nCache size in MB\nCleanup interval in milliseconds\nAdditional resolver configuration\nConnection limits\nSet connection timeout\nConnection timeout in milliseconds\nSet DAG cache size\nDAG store configuration\nSet DAG store path\nSet DAG store type\nSet data directory\nData directory base path\nEnable or disable debug mode\nWhether to enable debug features\nReputation decay rate\nDefault receipt wait time in milliseconds\nCreate a default development configuration\nStart with development defaults\nDID resolver configuration\nSet DID resolver type\nEnable or disable mDNS\nWhether to enable mDNS discovery\nWhether governance is enabled\nEnvironment type (production, development, testing)\nSet the environment type\nEnvironment type\nExpand paths with home directory\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nStart from an existing configuration\nLoad configuration from file\nLoad from a configuration file and use as base\nGet a reference to the current configuration state\nGet a mutable reference to the current configuration state\nGet the service environment from configuration\nGovernance configuration\nEnable or disable governance\nHSM configuration (for HSM-based storage)\nIdentity configuration\nSet initial mana balance\nInitial mana balance for new accounts\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSet job execution timeout\nJob execution timeout in milliseconds\nSet keep alive interval\nKeep-alive interval in milliseconds\nSet key file path\nPath to key file (for file-based storage)\nKey storage configuration\nSet key store type\nPath to mana ledger database\nHSM library path\nSet listen addresses (replaces existing)\nListen addresses for P2P networking\nSet log level\nLog level\nMana ledger configuration\nSet mana ledger path\nSet mana regeneration rate\nMaximum mana capacity\nSet maximum concurrent jobs\nMaximum concurrent jobs\nMaximum connections per peer\nSet maximum incoming connections\nMaximum number of incoming connections\nSet maximum job queue size\nMaximum job queue size\nSet maximum mana capacity\nSet maximum outgoing connections\nMaximum number of outgoing connections\nMerge with another configuration (other takes precedence)\nEnable or disable metrics\nWhether to enable metrics collection\nMinimum mana required to create a proposal\nMinimum quorum for proposals\nSet minimum voting power\nMinimum voting power required to vote\nNetwork configuration\nCreate a new builder with default values\nSet the node DID\nThe DID for this node\nRequired threshold for passing proposals\nPeer ID\nHSM PIN\nCreate a default production configuration\nStart with production defaults\nProposal cost in mana\nProposal parameters\nMana regeneration rate per second\nReputation store configuration\nSet request timeout\nRequest timeout in milliseconds\nType of DID resolver (key, web)\nRuntime parameters\nHSM slot ID\nStorage configuration\nStorage path (for persistent stores)\nStorage path (for persistent stores)\nType of key store (file, hsm, stub)\nType of DAG store (memory, file, sled, rocksdb)\nType of reputation store (memory, file, database)\nCreate a default testing configuration\nStart with testing defaults\nNetwork protocol timeouts\nSave configuration to file\nCreate a ServiceConfig from this RuntimeConfig\nValidate the configuration\nValidate the current configuration\nSet vote cost in mana\nVote cost in mana\nVoting parameters\nSet voting period\nVoting period in seconds\nOverride with environment-specific settings\nHigh-performance template\nTesting template with isolated storage\nLocal development template\nMinimal resource template\nProduction server template\nCompile-time checks to ensure production safety.\nError types for the ICN runtime context and host ABI.\nHost environment types for WASM interaction.\nMana management types and implementations for the ICN …\nMesh network service types and implementations for the ICN …\nRuntimeContext struct and implementations.\nService configuration for RuntimeContext.\nSigner implementations for the ICN runtime.\nStub implementations for testing the ICN runtime.\nTrait to mark services as production-ready\nCompile-time function to check if a service is …\nDevelopment/testing validation\nError type for Host ABI operations.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nConcrete implementation of HostEnvironment.\nHost environment trait for WASM interaction.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSupported mana ledger persistence backends.\nPlaceholder for icn_economics::ManaRepository\nSimple wrapper around the selected <code>ManaLedger</code> …\nCredit mana to an account.\nCredit mana to all accounts.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the current balance for an account.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new ledger at the given path. Panics if the …\nCreate a ledger using a specific backend.\nSet the balance for an account.\nSpend mana from an account.\nBid identifier type.\nDefault mesh network service implementation.\nJob assignment notice sent to executors.\nLocal mesh submit receipt message.\nMesh job state change information.\nMesh network service trait for handling mesh jobs, …\nGovernance cost constants.\nSelection policy for executor selection.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGovernance payload types\nDefault capacity used when no parameter is set.\nParameter key for the mana capacity limit managed via …\nEnumeration of mesh network service types to work around …\nCore runtime context for the ICN node.\nParameters for <code>RuntimeContext</code> construction.\nAnchor an execution receipt.\nCast a governance vote.\nClose voting on a governance proposal.\nCreate a governance proposal.\nCredit mana to an account.\nDelegate vote to another DID.\nExecute a governance proposal.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a new RuntimeContext from a service configuration. …\nGet access to the underlying libp2p service if available.\nGet mana for an account.\nPerform a single integrity check on the DAG store.\nInternal queue mesh job method.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new context with proper services.\nCreate a development RuntimeContext with mixed services.\nCreate a new context for development with mixed services.\nCreate a new context for production with all production …\nCreate a new context for testing with all stub services.\nCreate a production RuntimeContext with all production …\nCreate a testing RuntimeContext with all stub services.\nCreate a new context with ledger path (convenience method …\nCreate a new context with ledger path and time provider …\nCreate a new context with custom mana ledger and time …\nCreate a new context with real libp2p (convenience method …\nCreate a new context with real libp2p and mDNS services.\nCreate a new context with stubs for testing.\nCreate a new context with stubs and initial mana balance …\nRevoke vote delegation.\nShutdown network services.\nSpawn the mana regenerator task.\nSpawn the mesh job manager task.\nSpend mana from an account.\nDevelopment environment - mix of production and stub …\nProduction environment - all services must be …\nComplete service configuration\nService configuration builder that ensures type safety\nService configuration environments\nTesting environment - stub services allowed and preferred\nBuild the service configuration\nCreate a development configuration\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new service configuration builder\nCreate a production configuration\nCreate a testing configuration\nValidate that the configuration is appropriate for the …\nSet the DAG store (required for production)\nSet the DID resolver (required)\nSet the current identity (required)\nSet the mana ledger (required)\nSet the network service (required for production)\nSet the policy enforcer (optional)\nSet the reputation store (optional)\nSet the signer (required)\nSet the time provider (optional)\nProduction Ed25519 signer\nSimple file-based HSM implementation used for testing. The …\nHSM key store trait for hardware security module …\nUpdated Signer trait to be synchronous and match new …\nStub signer for testing\nFetch the Ed25519 keypair used for signing.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a signer from an encrypted file.\nCreate a signer from an HSM.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new signer with the given signing key.\nCreate a new signer with explicit keys.\nStub DAG store for testing.\nStub mesh network service for testing.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nResource limiter for WASM execution\nTrait for a job executor.\nA simple executor that can handle basic predefined tasks …\nA WASM-based executor that loads WASM modules from the DAG …\nWASM module validator for security analysis\nSecurity limits for WASM execution\nExecutes the given job using [<code>execute_job</code>] and immediately …\nExecutes the given job and returns an ExecutionReceipt.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nInstruction fuel allotted to each execution.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMaximum execution time in seconds\nMaximum fuel consumption\nMaximum number of functions\nMaximum number of globals\nMaximum bytes of linear memory a guest may allocate.\nMaximum linear memory pages (64KB each)\nMaximum stack depth\nMaximum table size\nMaximum number of tables\nCreates a new <code>WasmExecutor</code> bound to the given runtime …\nSecurity limits for WASM execution\nValidates a WASM module against configured security limits\nCreate a <code>SimpleExecutor</code> that can also execute CCL WASM …\nReads a slice of bytes from guest memory.\nReads a UTF-8 string from guest memory.\nReads a UTF-8 string from guest memory, returning an empty …\nWrites bytes into guest memory at the given pointer.\nWrites a UTF-8 string into guest memory at the given …\nWrites at most <code>max_len</code> bytes of the provided UTF-8 string …\nCounts calls to <code>host_account_get_mana</code>.\nCounts calls to <code>host_account_spend_mana</code>.\nCounts calls to <code>host_get_pending_mesh_jobs</code>.\nCounts calls to <code>host_submit_mesh_job</code>.\nTracks the number of jobs currently active (submitted but …\nCounts mesh jobs that completed successfully.\nCounts mesh jobs that failed.\nCounts mesh jobs submitted via the runtime.\nCounts receipts anchored to the DAG.\nCounts denied memory growth attempts inside the WASM …\nCounts denied table growth attempts inside the WASM …")