searchState.loadedDescShard("icn_runtime", 0, "ICN Runtime Crate\nReputation updater for handling execution receipts.\nAsynchronous version of <code>StorageService</code>.\nDefines the Host ABI function indices for the ICN runtime.\nCast to [<code>Any</code>] for downcasting.\nConvert a circuit complexity score into a mana cost.\nConfiguration management for ICN runtime.\nChecks if a block with the given CID exists in the store.\nRuntime context module for the ICN runtime.\nDeletes a block from the store by its CID.\nMacro to enforce production service usage\nThis module provides executor-side functionality for …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGenerate a credential proof using the runtime’s ZK …\nRetrieves a block from the store by its CID.\nRetrieve metadata for a block.\nABI Index: (defined in <code>abi::ABI_HOST_ACCOUNT_CREDIT_MANA</code>) …\nABI Index: (defined in <code>abi::ABI_HOST_ACCOUNT_GET_MANA</code>) …\nABI Index: (defined in <code>abi::ABI_HOST_ACCOUNT_SPEND_MANA</code>) …\nABI Index: (defined in <code>abi::ABI_HOST_ANCHOR_RECEIPT</code>) …\nCasts a governance vote using the runtime context.\nCloses voting on a governance proposal and broadcasts the …\nCreates a governance proposal using the runtime context.\nDelegate voting power from one DID to another.\nExecutes an accepted governance proposal, rewarding the …\nGenerate a dummy zero-knowledge credential proof.\nGet the complete lifecycle status of a job by …\nABI Index: (defined in <code>abi::ABI_HOST_GET_PENDING_MESH_JOBS</code>)\nGet the reputation of a DID.\nRevoke any vote delegation for the given DID.\nABI Index: (defined in <code>abi::ABI_HOST_SUBMIT_MESH_JOB</code>) …\nVerify a zero-knowledge credential proof.\nVerify a zero-knowledge revocation proof.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRetrieve all blocks stored in the backend.\nCreate a new updater with no internal state.\nMark the block as pinned.\nDelete expired blocks that are not pinned.\nPuts a block into the store.\nRegister runtime-specific metrics with a provided registry …\nUpdate TTL metadata for a block.\nRecord a completed execution in the provided reputation …\n<code>ToString::to_string</code>, but without panic on OOM.\nRemove the pinned flag.\nMacro to validate service configuration at compile time\nVerify a credential proof using the runtime’s ZK …\nWASM wrapper for <code>host_account_get_mana</code>.\nWASM wrapper for <code>host_account_spend_mana</code>.\nWASM wrapper for <code>host_anchor_receipt</code>.\nWASM wrapper for <code>host_generate_zk_proof</code>.\nWASM wrapper for <code>host_get_pending_mesh_jobs</code>.\nWASM wrapper for <code>host_submit_mesh_job</code>.\nWASM wrapper for <code>host_verify_zk_proof</code>.\nWASM wrapper for <code>host_verify_zk_revocation_proof</code>.\nABI Index for <code>host_account_credit_mana</code>. Credits mana to …\nABI Index for <code>host_account_get_mana</code>. Retrieves the mana …\nABI Index for <code>host_account_spend_mana</code>. Attempts to spend …\nABI Index for <code>host_anchor_receipt</code>. Anchors an execution …\nABI Index for <code>host_cast_governance_vote</code>. Casts a vote on …\nABI Index for <code>host_close_voting_and_verify</code>. Closes voting …\nABI Index for <code>host_create_governance_proposal</code>. Creates a …\nABI Index for <code>host_execute_governance_proposal</code>. Triggers …\nABI Index for <code>host_generate_zk_proof</code>. Creates a …\nABI Index for <code>host_get_pending_mesh_jobs</code>. Retrieves …\nABI Index for <code>host_get_reputation</code>. Retrieves the …\nABI Index for <code>host_open_governance_voting</code>. Opens a …\nABI Index for <code>host_submit_mesh_job</code>. Submits a job to the …\nABI Index for <code>host_verify_zk_proof</code>. Verifies a …\nBootstrap peer configuration\nConnection limits configuration\nDAG store configuration\nDID resolver configuration\nEnvironment-specific configuration\nGovernance configuration\nHSM configuration\nIdentity and security configuration\nKey storage configuration\nMana ledger configuration\nNetwork configuration\nNetwork timeout configuration\nProposal configuration\nReputation store configuration\nComplete runtime configuration\nConfiguration builder for advanced use cases\nRuntime parameters configuration\nStorage configuration\nVoting configuration\nAdd a bootstrap peer\nAdd a listen address\nMultiaddress\nApply a configuration template\nBootstrap peers\nBuild the final configuration\nBuild without validation (useful for testing)\nCache size in MB\nCleanup interval in milliseconds\nAdditional resolver configuration\nConnection limits\nSet connection timeout\nConnection timeout in milliseconds\nSet DAG cache size\nDAG store configuration\nSet DAG store path\nSet DAG store type\nSet data directory\nData directory base path\nEnable or disable debug mode\nWhether to enable debug features\nReputation decay rate\nDefault receipt wait time in milliseconds\nCreate a default development configuration\nStart with development defaults\nDID resolver configuration\nSet DID resolver type\nEnable or disable mDNS\nWhether to enable mDNS discovery\nWhether governance is enabled\nEnvironment type (production, development, testing)\nSet the environment type\nEnvironment type\nExpand paths with home directory\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nStart from an existing configuration\nLoad configuration from file\nLoad from a configuration file and use as base\nGet a reference to the current configuration state\nGet a mutable reference to the current configuration state\nGet the service environment from configuration\nGovernance configuration\nEnable or disable governance\nHSM configuration (for HSM-based storage)\nIdentity configuration\nSet initial mana balance\nInitial mana balance for new accounts\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSet job execution timeout\nJob execution timeout in milliseconds\nSet keep alive interval\nKeep-alive interval in milliseconds\nSet key file path\nPath to key file (for file-based storage)\nKey storage configuration\nSet key store type\nPath to mana ledger database\nHSM library path\nSet listen addresses (replaces existing)\nListen addresses for P2P networking\nSet log level\nLog level\nMana ledger configuration\nSet mana ledger path\nSet mana regeneration rate\nMaximum mana capacity\nSet maximum concurrent jobs\nMaximum concurrent jobs\nMaximum connections per peer\nSet maximum incoming connections\nMaximum number of incoming connections\nSet maximum job queue size\nMaximum job queue size\nSet maximum mana capacity\nSet maximum outgoing connections\nMaximum number of outgoing connections\nMerge with another configuration (other takes precedence)\nEnable or disable metrics\nWhether to enable metrics collection\nMinimum mana required to create a proposal\nMinimum quorum for proposals\nSet minimum voting power\nMinimum voting power required to vote\nNetwork configuration\nCreate a new builder with default values\nSet the node DID\nThe DID for this node\nRequired threshold for passing proposals\nPeer ID\nHSM PIN\nCreate a default production configuration\nStart with production defaults\nProposal cost in mana\nProposal parameters\nMana regeneration rate per second\nReputation store configuration\nSet request timeout\nRequest timeout in milliseconds\nType of DID resolver (key, web)\nRuntime parameters\nHSM slot ID\nStorage configuration\nStorage path (for persistent stores)\nStorage path (for persistent stores)\nType of key store (file, hsm, stub)\nType of DAG store (memory, file, sled, rocksdb)\nType of reputation store (memory, file, database)\nCreate a default testing configuration\nStart with testing defaults\nNetwork protocol timeouts\nSave configuration to file\nCreate a ServiceConfig from this RuntimeConfig\nValidate the configuration\nValidate the current configuration\nSet vote cost in mana\nVote cost in mana\nVoting parameters\nSet voting period\nVoting period in seconds\nOverride with environment-specific settings\nHigh-performance template\nTesting template with isolated storage\nLocal development template\nMinimal resource template\nProduction server template\nGlobal atomic storing the node start time in seconds since …\nAdvanced CCL WASM backend features for enhanced governance …\nCompile-time checks to ensure production safety.\nComprehensive coordinator for ICN advanced features\nCross-Component Coordinator for Enhanced ICN Integration\nEnhanced DAG Synchronization with Network-Aware Propagation\nError types for the ICN runtime context and host ABI.\nFederation management integration for the ICN runtime.\nHost environment types for WASM interaction.\nMana management types and implementations for the ICN …\nMesh network service types and implementations for the ICN …\nReal-time CCL Integration with P2P and DAG Operations\nRuntimeContext struct and implementations.\nRuntime context factory for ICN\nService configuration for RuntimeContext.\nSigner implementations for the ICN runtime.\nSmart P2P Message Routing with Reputation-Based Selection\nStub implementations for testing the ICN runtime.\nAdvanced CCL WASM execution environment with optimization …\nConfiguration for CCL WASM execution\nResult of CCL WASM execution\nCCL execution performance metrics\nContext for CCL WASM execution\nAverage execution time in milliseconds\nClear module cache\nCompilation statistics\nCompile CCL WASM module with optimizations\nEnable execution monitoring\nEnable compilation optimizations\nExecute CCL proposal with advanced monitoring and limits\nFailed executions\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet current performance metrics\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMaximum execution time for proposals\nMaximum instruction count\nMaximum memory usage in bytes\nMemory usage statistics\nCache size for compiled modules\nCreate a new advanced CCL WASM backend\nOptimization level to use\nOptimization effectiveness\nSuccessful executions\nTotal proposals executed\nTrait to mark services as production-ready\nCompile-time function to check if a service is …\nDevelopment/testing validation\nAcknowledged but not yet addressed\nResult of autonomous actions\nRecently detected\nTypes of autonomous adaptations\nChange algorithm or strategy\nStatus of health anomalies\nTypes of system health anomalies\nRecord of autonomous actions taken\nAutonomous adaptation executed\nAvailability milestone\nScale system component\nConfiguration for comprehensive coordination\nComprehensive coordination statistics\nComprehensive coordinator for all advanced ICN systems\nSystem-wide coordination events\nTypes of cross-system correlations\nCost effectiveness milestone\nCost reduction opportunity\nCross-component coordination\nCross-system correlation detected\nDAG synchronization system\nDegrading trend\nNewly discovered\nEconomic automation system\nEfficiency milestone\nEfficiency correlation\nEfficiency improvement\nApply emergency configuration\nError pattern correlation\nError rate increase\nBeing evaluated\nOpportunity expired/no longer valid\nImplementation failed\nAction failed\nFailover to backup\nFault tolerance enhancement\nEnable/disable feature\nFederation integration system\nGovernance automation system\nHealth anomaly information\nSystem health anomaly detected\nSuccessfully implemented\nCurrently implementing\nImproving trend\nAction is still in progress\nIncrease resource allocation\nBeing investigated\nIsolate problematic component\nLatency milestone\nLoad balancing adjustment\nLoad pattern correlation\nManual intervention required\nTypes of performance milestones\nStatus of optimization opportunities\nTypes of optimization actions\nResult of optimization execution\nOptimization opportunity\nSystem optimization opportunity detected\nTypes of optimization opportunities\nAdjust system parameters\nAction partially succeeded\nPerformance correlation between systems\nPerformance degradation\nPerformance improvement opportunity\nPerformance metric tracking\nPerformance milestone reached\nPerformance tuning\nReady for implementation\nReliability enhancement\nRemediation in progress\nTypes of remediation actions\nReputation integration system\nResolved\nResource usage correlation\nResource exhaustion\nResource optimization\nRedistribute resources\nResource utilization optimization\nRestart system component\nScalability improvement\nSmart P2P routing system\nStable trend\nAction succeeded\nComprehensive system health status\nStatistics from individual systems\nTypes of systems in the coordination framework\nSystem unavailability\nThroughput milestone\nTrend analysis for performance metrics\nDirection of metric trends\nUnexpected behavior pattern\nVolatile/uncertain trend\nAction identifier\nAction type\nSuggested actions\nActive anomalies\nNumber of active anomalies\nActual impact (measured later)\nAnomaly identifier\nAnomaly type\nNumber of autonomous actions taken\nCurrent value\nDetection timestamp\nTrend direction\nDiscovery timestamp\nEconomic automation stats\nEnable autonomous adaptation\nEnable cross-system optimization\nEnable intelligent load balancing\nEnable predictive coordination\nEnable system resilience features\nCross-system event correlation window\nExecute optimization opportunity\nExecution timestamp\nTotal execution time\nExpected impact\nNumber of failed actions\nFederation integration stats\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet comprehensive coordination statistics\nGet current system health status\nGovernance automation stats\nSystem health monitoring interval\nMeasured impact achieved\nExpected impact score\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLast health check timestamp\nLast update time\nMaximum autonomous adaptation actions per hour\nMetric name\nMetric name\nCreate a new comprehensive coordinator\nOpportunity identifier\nOpportunity identifier\nPerformance optimization interval\nNumber of optimization opportunities\nOptimization type\nOverall system health score (0.0 to 1.0)\nOverall system health score\nParameters changed\nNumber of performance metrics tracked\nPerformance trends\nPredicted next value\nConfidence in prediction\nRecent values\nReputation integration stats\nResource utilization\nAction result\nRouting system stats\nSeverity level (0.0 to 1.0)\nStart the comprehensive coordinator\nCurrent status\nCurrent status\nStop the comprehensive coordinator\nTrend strength (0.0 to 1.0)\nNumber of successful actions\nAffected system\nHealth scores by system\nIndividual system statistics\nAffected systems\nSystems affected\nGet event receiver for coordination events\nTarget value\nTrend analysis\nValue history\nComprehensive cross-component coordinator\nEconomics-driven decision engine\nHealth monitoring and auto-recovery system\nIntegration metrics collector\nNetwork-DAG integration manager for coordinated operations\nPerformance optimization coordinator\nCast a vote on a governance proposal with immediate …\nReal-time CCL integration coordinator\nCoordinate a DAG operation with network propagation\nEnhanced DAG synchronization service\nEconomics-driven decision engine\nExecute a coordinated DAG operation with network …\nExecute a governance proposal with real-time status updates\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet optimal routing path for a target peer using …\nGet comprehensive system status\nHealth monitoring and recovery system\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIntegration metrics collector\nNetwork-DAG integration manager\nCreate a new cross-component coordinator\nOptimize operation based on economics and reputation\nPerformance optimization coordinator\nIntelligently propagate a DAG block with network-aware …\nRecord a block propagation event\nRecord a DAG synchronization event\nRecord a governance proposal execution\nRecord a governance proposal submission\nRecord a governance vote cast\nRecord an intelligent routing event\nRecord a reputation update event\nRoute a message intelligently using reputation-based peer …\nSmart P2P routing with reputation-based selection\nStart background coordination tasks\nSubmit a governance proposal with real-time P2P propagation\nPerform intelligent network-wide DAG synchronization\nUpdate peer reputation and trigger routing recalculation\nAdaptive strategy that changes based on conditions\nSelect peers with best connection quality\nSimple broadcast to all peers\nConnection quality metrics for a peer\nCritical priority - security or network-critical blocks\nSignificant synchronization problems\nSelect peers with complementary data\nPartition is experiencing issues\nEnhanced DAG synchronization manager with network-aware …\nEpidemic/gossip-style propagation\nSync system is failing\nSelect peers geographically distributed\nPartition is healthy and responsive\nAll systems operating normally\nHigh priority - governance or critical blocks\nSelect peers with highest reputation\nHypercube topology for optimal routes\nLow priority - eventual consistency\nSelect peers with lowest latency\nCurrent network conditions affecting strategy selection\nNetwork partition detection and management\nNormal priority - regular blocks\nHealth status of a network partition\nInformation about a peer connection\nPeer connection and quality management\nPerformance metrics for individual peers\nStrategies for selecting peers for DAG operations\nPriority levels for DAG block propagation\nDifferent strategies for DAG block propagation\nTask for propagating a DAG block to specific peers\nQuality thresholds for peer connections\nRing-based propagation for reliability\nWeights for peer selection criteria\nPerformance tracking for propagation strategies\nStrategy selection for different network conditions\nOverall synchronization health\nPerformance metrics for the sync system\nResult of a synchronization operation\nCurrent synchronization state across the network\nStatistics from synchronization operations\nTree-based propagation for efficiency\nPartition is unreachable\nMinor issues detected\nUse a weighted combination of factors\nNumber of retry attempts\nTotal propagation attempts\nBandwidth availability\nAverage network latency\nAverage response time\nAverage sync latency\nAverage propagation time\nEstimated bandwidth to this peer\nBandwidth utilization (0.0 - 1.0)\nBlock to propagate\nTotal blocks propagated\nNumber of blocks received from peers\nBlocks received during sync\nNumber of blocks sent to peers\nBlocks sent during sync\nTotal blocks synchronized\nNetwork congestion level (0.0 - 1.0)\nCreation timestamp\nData freshness score\nTime taken for synchronization\nResource efficiency score\nEstimated partition size\nFailed operations with this peer\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nHealth of this partition\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLast communication timestamp\nLast successful communication\nAverage latency in milliseconds\nMaximum attempts before giving up\nMaximum acceptable latency (ms)\nMaximum acceptable packet loss\nMinimum required reliability\nMinimum required reputation\nNetwork partition detection\nNetwork utilization\nCreate a new enhanced DAG synchronization manager\nPacket loss percentage (0.0 - 1.0)\nNumber of connected peers\nPeer identity\nLast sync with each peer\nPeer performance map\nPeers in this partition\nNumber of peers contacted\nNumber of peers contacted\nBlocks pending propagation\nPriority level\nIntelligently propagate a DAG block to the network\nPropagation success rate\nSupported protocol versions\nConnection quality metrics\nNumber of recent failures\nConnection reliability score (0.0 - 1.0)\nRepresentative peer for communication\nNetwork stability (0.0 - 1.0)\nStart the enhanced DAG synchronization service\nName of strategy used\nStrategy used for synchronization\nSuccessful propagations\nSuccessful operations with this peer\nOverall sync health\nSynchronize DAG state with network peers\nBlocks currently being synchronized\nTarget peers (None = broadcast to all)\nError type for Host ABI operations.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n<code>ToString::to_string</code>, but without panic on OOM.\nFederation-aware job selection helper\nInformation about federation context for job bidding\nIntegration layer for federation management within the …\nCheck if we can execute a job based on federation …\nDiscover federations from connected peers\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet all known federations (cached + dynamically discovered)\nGet enhanced bid information including federation context\nGet federation capabilities for job matching\nGet federation-based trust score for a peer\nGet our membership status in a federation\nGet federations we are members of\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nJoin a federation\nLeave a federation\nCreate a new federation integration instance\nCheck if we should bid on a job based on federation …\nSynchronize federation state with the network\nConcrete implementation of HostEnvironment.\nHost environment trait for WASM interaction.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSupported mana ledger persistence backends.\nPlaceholder for icn_economics::ManaRepository\nSimple wrapper around the selected <code>ManaLedger</code> …\nCredit mana to an account.\nCredit mana to all accounts.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the current balance for an account.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new ledger at the given path. Panics if the …\nCreate a ledger using a specific backend.\nSet the balance for an account.\nSpend mana from an account.\nBid identifier type.\nDefault mesh network service implementation.\nJob assignment notice sent to executors.\nLocal mesh submit receipt message.\nMesh job state change information.\nMesh network service trait for handling mesh jobs, …\nGovernance cost constants.\nDetailed statistics for a specific peer\nResult of pinging a peer\nSelection policy for executor selection.\nAverage round-trip latency\nError message if ping failed\nEstimated bandwidth to this peer\nFailed message deliveries\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet average network latency across all connected peers\nGet list of currently connected peers\nGet detailed statistics for a specific peer\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCheck if the network appears to be partitioned\nLast successful communication\nPing a specific peer to measure latency and connectivity\nQuery connections of a specific peer to discover network …\nConnection reliability score (0.0 - 1.0)\nRound-trip time for the ping\nSend a direct message to a specific peer\nSend a message via multiple hops through specified peers\nSubmit a bid for a job (used by executor nodes)\nSubmit an execution receipt (used by executor nodes)\nWhether the ping was successful\nSuccessful message deliveries\nTotal messages sent to this peer\nCreate an enhanced mesh network service with real …\nActive proposal being monitored for real-time updates\nReal-time CCL integration coordinator\nCCL execution performance metrics\nProposal execution completed\nProposal deadline reached\nEmergency governance action\nStatistics for event processing\nProposal is being executed\nProposal execution completed\nProposal execution started\nProposal expired\nProposal execution failed\nA governance event that requires real-time processing\nTracks governance events for real-time processing\nTypes of governance events\nSnapshot of network conditions for historical reference\nParameter change executed\nProposal is being propagated\nNetwork propagation information for proposals\nStructured proposal block for DAG storage\nNew proposal created\nMetadata for proposal blocks\nPerformance metrics for individual proposals\nReal-time proposal status\nProposal reached quorum\nProposal has reached quorum\nResource consumption tracking\nVote block for DAG storage\nVote cast on a proposal\nGeographic/network distribution of votes\nLatency statistics for voting\nMetadata for vote blocks\nVote tracking for real-time governance\nProposal is open for voting\nAverage execution time\nAverage time from proposal to first vote\nAverage time between votes\nAverage network latency\nAverage processing time\nNetwork propagation delay\nVotes by network cluster/region\nReputation-weighted vote distribution\nCast a vote with immediate network propagation\nCompute cycles used\nNumber of connected peers\nTotal CCL contracts executed\nEstimated total network coverage\nDAG anchoring performance\nDAG storage used (bytes)\nEstimated time to quorum\nEvent type\nEvents by type counters\nExecute a proposal with real-time status updates\nExecution time (if executed)\nFailed executions\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLast event processing timestamp\nVoting latency statistics\nTime to reach majority of nodes\nAdditional metadata\nVote metadata\nPerformance metrics for this proposal\nNetwork bandwidth used (bytes)\nNetwork conditions at time of submission\nNetwork propagation time\nCreate a new CCL integration coordinator\nNodes that have received the proposal\nEvent originator\nP2P propagation efficiency\nVoting participation rate\nEstimated network partition status\nEvent payload\nProcessing failures\nEvent processing statistics\nEstimated vote propagation delay\nNetwork propagation info\nPriority for P2P propagation\nProposal details\nRaw proposal data\nProposal being voted on\nAssociated proposal ID (if applicable)\nReal-time integration latency\nRecent governance events\nResource consumption\nStart the real-time CCL integration service\nPropagation start time\nReal-time status\nPropagation strategy used\nContext in which proposal was submitted\nSubmit a proposal with real-time P2P propagation and DAG …\nDID of the proposal submitter\nSuccessful executions\nEvents processed successfully\nTimestamp when proposal was created\nTimestamp when vote was cast\nEvent timestamp\nMana cost for participants\nTotal events processed\nTotal processing time from creation to completion\nBlock format version\nVote block format version\nGeographic distribution of votes\nVote option selected\nVote tracking\nDID of the voter\nVoter’s reputation at time of voting\nVotes by option\nVotes received so far\nContext in which vote was cast\nVoting period duration\nAction recorded in the <code>ResourceLedger</code>.\nSimple in-memory ledger of resource events.\nEntry representing a resource event anchored in the DAG.\nList all recorded entries.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new empty ledger.\nAppend an entry to the ledger.\nRecord a resource event and anchor it in the DAG store.\nGovernance payload types\nDefault capacity used when no parameter is set.\nDevelopment environment - mixed services allowed\nEnvironment type for RuntimeContext configuration.\nParameter key for the mana capacity limit managed via …\nEnumeration of mesh network service types to work around …\nRecord of a runtime parameter change anchored in the DAG.\nProduction environment - all services must be …\nCore runtime context for the ICN node.\nConfiguration builder for creating RuntimeContext …\nParameters for <code>RuntimeContext</code> construction.\nTesting environment - stub services preferred\nAnchor a job checkpoint to the DAG.\nAnchor a parameter update event in the DAG.\nAnchor a partial output receipt to the DAG.\nAnchor an execution receipt.\nBuild the RuntimeContext with validation.\nCast a governance vote.\nClose voting on a governance proposal.\nCreate a governance proposal.\nCredit mana to an account.\nEnhanced cross-component coordinator for intelligent …\nDelegate vote to another DID.\nEvaluate a job announcement and decide whether to bid.\nExecute an assigned job and create an execution receipt.\nExecute a governance proposal.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a new RuntimeContext from a service configuration. …\nRetrieve synchronization status of the local DAG.\nGet the complete lifecycle of a job by reconstructing it …\nGet access to the underlying libp2p service if available.\nGet mana for an account.\nSubmit a mesh job with complete DAG lifecycle integration. …\nIngest a proposal that originated from another node.\nIngest a vote that originated from another node.\nPerform a single integrity check on the DAG store.\nInternal queue mesh job method (DEPRECATED - use …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nName of the updated parameter.\nCreate a new <code>RuntimeContext</code> with all production services.\nCreate a new builder for the specified environment.\nCreate a development RuntimeContext with mixed services.\nCreate a RuntimeContext configured for production …\nCreate a testing RuntimeContext with all stub services.\nCreate a testing context with a custom system info …\nCreate a new context with ledger path (convenience method …\nCreate a new context with ledger path and time provider …\nCreate a new context with custom mana ledger and time …\nCreate a new context with real libp2p (convenience method …\nCreate a new context with real libp2p and mDNS services.\nCreate a new context using explicitly provided services. …\nCreate a new context with stubs for testing.\nCreate a new context with stubs and initial mana balance …\nRecord a resource event and anchor it in the DAG.\nRevoke vote delegation.\nShutdown network services.\nDID of the signer applying the update.\nSpawn the mana regenerator task.\nSpawn the mesh executor manager that allows this node to …\nSpawn the mesh job manager with full lifecycle support.\nSpend mana from an account.\nSeconds since Unix epoch when the change occurred.\nValidate that production services are being used correctly.\nNew value for the parameter.\nSet the DAG store (required for production).\nSet the current identity for this context.\nSet initial mana balance (for testing).\nSet the mana ledger (required for all environments).\nSet the network service (required for production).\nSet the policy enforcer (optional).\nSet the reputation store (optional).\nSet the cryptographic signer (required for production).\nDevelopment environment - mix of real and fallback services\nIntegration testing - real services with test …\nProduction environment - all real services required\nFactory for creating runtime contexts\nConfiguration for creating runtime contexts\nBuilder for runtime creation configurations\nRuntime environment types for context creation\nTesting environment - optimized for fast, deterministic …\nWhether to allow fallback services\nCreate a runtime context with the given configuration\nCreate a fast testing context with minimal setup\nCreate a development context with local networking\nCreate a production-ready context with strict validation\nData directory for persistent storage\nCreate a development configuration\nCustom DID resolver\nWhether to enable federation management\nTarget environment\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nNode identity\nInitial mana balance\nCreate an integration testing configuration\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNetwork configuration\nConvenience functions for common runtime creation patterns\nCreate a production configuration\nCustom reputation store\nCreate a testing configuration\nCustom time provider\nCreate an integration testing runtime context\nCreate a local development runtime context\nCreate a production runtime context\nCreate a fast testing runtime context\nDevelopment environment - mix of production and stub …\nProduction environment - all services must be …\nComplete service configuration\nService configuration builder that ensures type safety\nService configuration environments\nTesting environment - stub services allowed and preferred\nBuild the service configuration\nCreate a development configuration\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new service configuration builder\nCreate a production configuration\nCreate a testing configuration\nValidate that the configuration is appropriate for the …\nSet the DAG store (required for production)\nSet the DID resolver (required)\nSet the current identity (required)\nSet the mana ledger (required)\nSet the network service (required for production)\nSet the policy enforcer (optional)\nSet the reputation store (optional)\nSet the signer (required)\nSet the time provider (optional)\nProduction Ed25519 signer\nSimple file-based HSM implementation used for testing. The …\nHSM key store trait for hardware security module …\nUpdated Signer trait to be synchronous and match new …\nStub signer for testing\nFetch the Ed25519 keypair used for signing.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a signer from an encrypted file.\nCreate a signer from an HSM.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new signer with the given signing key.\nCreate a new signer with explicit keys.\nAdaptive strategy that learns optimal routes\nParameters for adaptive learning in routing\nMetrics for a network topology cluster\nConnection quality metrics between peers\nCritical/emergency messages\nDirect connection to target peer\nGeographic-aware routing for distributed networks\nImportant system messages\nLoad-balanced routing to distribute network usage\nBackground/eventual delivery\nRoute through lowest latency path\nMessage priority levels for routing decisions\nIntelligent message queue for buffering and prioritization\nRoute through most reliable path\nCurrent network conditions for strategy selection\nRegular operational messages\nInformation about routing to a specific peer\nRouting statistics for individual peers\nMaximum queue sizes for different priority levels\nA message in the routing queue\nRedundant routing through multiple paths\nRoute through highest reputation intermediate peers\nA routing path through the network to reach a target peer\nPerformance metrics for the routing system\nDifferent routing strategies for message delivery\nRouting strategy selection and management\nRouting table containing peer information and network …\nSmart P2P routing coordinator with reputation-based peer …\nPerformance tracking for routing strategies\nNetwork topology cluster for efficient routing\nNumber of delivery attempts\nAverage delivery time per priority\nAverage delivery time\nAverage delivery time to this peer\nAverage intra-cluster latency\nAverage network latency\nCluster reputation average\nBandwidth availability within cluster\nAvailable bandwidth (bytes/second)\nCluster identifier\nCluster quality metrics\nNetwork congestion level (0.0 - 1.0)\nCreation timestamp\nDelivery deadline (if any)\nDirect peer connections with quality metrics\nDirect connection quality\nDiscover and update network topology\nEstimated message delivery time\nEstimated latency for this path\nExploration vs exploitation balance\nFailed deliveries\nCommunication failure count\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nRepresentative/gateway peer for the cluster\nGet the best routing path to a target peer\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLast quality measurement timestamp\nLast successful communication\nLast topology update timestamp\nLast performance update\nLast time this path was used\nRound-trip latency in milliseconds\nLearning rate for strategy optimization\nMaximum attempts before giving up\nUnique message identifier\nTotal messages routed with this strategy\nMessages sent to this peer\nMinimum samples before strategy adaptation\nMulti-hop routes through the network\nNetwork utilization metrics\nCreate a new smart P2P router\nPacket loss rate (0.0 - 1.0)\nPartition detection status\nSequence of peer IDs forming the path\nTotal path quality score\nMessage payload\nTarget peer identity\nPer-peer routing statistics\nPeers in this cluster\nPreferred routing strategy for this peer\nMessage priority level\nNumber of reachable peers\nWeight for recent performance vs historical\nPath reliability score (0.0 - 1.0)\nCluster reliability score\nPeer reputation score\nResource efficiency (lower is better)\nRoute a message to a target peer using intelligent …\nAvailable routing paths\nRouting strategy to use for this message\nConnection stability score (0.0 - 1.0)\nOverall network stability\nStart the smart P2P routing service\nSuccess rate for this path\nSuccessful deliveries\nSuccessful deliveries\nSuccessful deliveries to this peer\nTarget peer for delivery\nNetwork topology clusters for efficient routing\nTotal messages routed\nUpdate peer reputation and adjust routing preferences\nStub DAG store for testing.\nStub mesh network service for testing.\nClear all staged data (for test cleanup)\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet announced jobs (for testing verification)\nGet assignment notices (for testing verification)\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSet up the job announcement notification channel\nStage a bid for a specific job (for testing)\nStage a receipt for a specific job (for testing)\nSimple logger that stores log lines in memory for later …\nClear any stored logs.\nReturns the process high water mark (peak RSS) in …\nReturns the argument unchanged.\nInitialize the global execution logger if not already set.\nCalls <code>U::from(self)</code>.\nRetrieve and clear logs collected since the last call.\nManages job checkpoints and progress tracking for …\nResource limiter for WASM execution\nTrait for a job executor.\nA simple executor that can handle basic predefined tasks …\nA WASM-based executor that loads WASM modules from the DAG …\nWASM module validator for security analysis\nSecurity limits for WASM execution\nClean up completed job data\nExecutes the given job using [<code>execute_job</code>] and immediately …\nExecutes the given job and returns an ExecutionReceipt.\nExecutes a job with checkpoint support for long-running …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nInstruction fuel allotted to each execution.\nGet current progress for a running job (if supported).\nGet the latest checkpoint for a job\nGet all partial outputs for a job\nGet current progress for a job\nCheck if a job has any checkpoints (indicating it’s a …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMaximum execution time in seconds\nMaximum fuel consumption\nMaximum number of functions\nMaximum number of globals\nMaximum bytes of linear memory a guest may allocate.\nMaximum linear memory pages (64KB each)\nMaximum stack depth\nMaximum table size\nMaximum number of tables\nCreates a new <code>WasmExecutor</code> bound to the given runtime …\nResume execution from a checkpoint.\nSave a checkpoint for a job\nSave a partial output receipt\nSecurity limits for WASM execution\nUpdate progress for an active job\nValidates a WASM module against configured security limits\nCreate a <code>SimpleExecutor</code> that can also execute CCL WASM …\nReads a slice of bytes from guest memory.\nReads a UTF-8 string from guest memory.\nReads a UTF-8 string from guest memory, returning an empty …\nWrites bytes into guest memory at the given pointer.\nWrites a UTF-8 string into guest memory at the given …\nWrites at most <code>max_len</code> bytes of the provided UTF-8 string …\nCounts checkpoints anchored to the DAG.\nCounts calls to <code>host_account_credit_mana</code>.\nCounts calls to <code>host_account_get_mana</code>.\nCounts calls to <code>host_account_spend_mana</code>.\nCounts calls to <code>host_anchor_receipt</code>.\nCounts calls to <code>host_get_pending_mesh_jobs</code>.\nCounts calls to <code>host_submit_mesh_job</code>.\nTracks the number of jobs currently active (submitted but …\nCounts mesh jobs that completed successfully.\nCounts mesh jobs that failed.\nCounts mesh jobs submitted via the runtime.\nCounts job cancellations.\nCounts successful job resumes from checkpoints.\nTracks the number of jobs with active checkpoints …\nTracks the number of known mana ledger accounts.\nCounts partial outputs anchored to the DAG.\nCounts receipts anchored to the DAG.\nCounts denied memory growth attempts inside the WASM …\nCounts denied table growth attempts inside the WASM …\nUtilities for encoding and decoding simple <code>Result&lt;Integer&gt;</code> …")