searchState.loadedDescShard("icn_cli", 0, "ICN CLI (<code>icn-cli</code>)\nAccount queries\nMutual aid resource registry\nCount constraints for a circuit\nBackup the DAG store to the specified directory\nGet mana balance for an account\nCooperative Contract Language operations\nCompile a CCL source file\nCompile a CCL file to WASM and upload to the node\nCooperative discovery and management\nGenerate a cooperative template interactively\nDAG block operations\nEmergency response coordination\nExplain constructs within a CCL policy\nFederation management commands\nGet federation trust statistics\nGenerate a Groth16 proving key and sign the verifying key\nGenerate a dummy zero-knowledge credential proof\nRequest proof generation from the node\nGet trust relationship between two entities\nRetrieve a DAG block by its CID (provide CID as JSON …\nGet reputation score for an identity\nGovernance operations\nIdentity operations\nGet node information (version, name, status message)\nInitialize a new federation\nQuery mesh job status by ID\nList all mesh jobs\nJoin a federation by specifying a peer\nKey management\nLeave a federation\nLint a CCL source file for errors\nList trust relationships for an entity\nList open aid requests\nList available aid resources\nList peers known to the node\nMesh job operations\nRetrieve metadata for a DAG block by CID\nFetch Prometheus metrics text\nMonitoring commands using metrics\nGet trust network neighbors\nNetwork operations\nInteractive cooperative onboarding wizard\nFind trust paths between two entities\nFetch local peer ID and list of discovered peers\nPin a DAG block with optional TTL\nSend a ping to a peer\nGet a cooperative profile by DID\nBenchmark a circuit with Criterion\nGet a specific proposal by its ID\nList all proposals\nFind providers of a specific capability\nPrune expired blocks\nStore a DAG block (provide block as JSON string, or ‘-’…\nRecalculate trust scores\nRegister a new cooperative in the federation\nRegister a new aid resource\nRemove trust relationship\nReputation queries\nSubmit a new aid request\nRestore the DAG store from the specified directory\nGet trust score for an entity\nGet trust scores for multiple entities\nSearch for cooperatives in the federation\nSearch entities by trust criteria\nInteractive node setup wizard\nShow node DID and public key\nShow registry statistics\nGet trust graph statistics\nDisplay network statistics\nGet node status (online, peers, block height)\nGet status for a specific job\nShow federation status\nSubmit a new proposal (provide proposal request as JSON …\nSubmit a new mesh job\nSubmit a mesh job (JSON string or ‘-’ for stdin)\nSynchronize federation state\nTally votes and close a proposal\nTrust management and graph operations\nAdd a trust relationship with another cooperative\nTrust management commands\nList trust relationships for a cooperative\nUnpin a DAG block\nUpdate trust relationship\nDisplay node uptime using the metrics endpoint\nValidate trust for an operation\nVerify blocks in the DAG store\nVerify a zero-knowledge credential proof (JSON string or …\nVerify a proof via the node\nVerify multiple proofs from a JSON array\nVerify a revocation proof (JSON string or ‘-’ for …\nCast a vote on a proposal (provide vote request as JSON …\nInteractive cooperative formation wizard\nZero-knowledge tooling\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nSubmit a new mesh job to the node\nSend a ping to the specified peer using the stubbed …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")