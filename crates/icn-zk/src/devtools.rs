use crate::Fr;
use ark_relations::r1cs::{ConstraintSynthesizer, ConstraintSystem, SynthesisError};

/// Count the number of constraints generated by the provided circuit.
pub fn count_constraints<C: ConstraintSynthesizer<Fr>>(
    circuit: C,
) -> Result<usize, SynthesisError> {
    let cs = ConstraintSystem::<Fr>::new_ref();
    circuit.generate_constraints(cs.clone())?;
    cs.finalize();
    Ok(cs.num_constraints())
}

/// Log the number of constraints generated by the provided circuit.
pub fn log_constraints<C: ConstraintSynthesizer<Fr>>(
    name: &str,
    circuit: C,
) -> Result<usize, SynthesisError> {
    let count = count_constraints(circuit)?;
    println!("{name} constraints: {count}");
    Ok(count)
}
